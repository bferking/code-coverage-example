
name: .NET Build and Test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0.x'

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --no-restore --configuration Release

    - name: Run tests
      run: dotnet test Demo-App.sln --no-build --configuration Release --collect:"XPlat Code Coverage;Format=json,lcov,cobertura" --results-directory ./coverage

    # - name: Generate Code Coverage report
    #   id: code-coverage
    #   uses: barecheck/code-coverage-action@v1
    #   with:
    #     barecheck-github-app-token: ${{ secrets.BARECHECK_GITHUB_APP_TOKEN }}
    #     lcov-file: "coverage/coverage.info" # Fixed path
    #     send-summary-comment: true
    #     show-annotations: "warning"


    # - name: Download and Upload Coverage to Code Climate
    #   run: |
    #     curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
    #     chmod +x ./cc-test-reporter
    #     ./cc-test-reporter format-coverage -t lcov coverage/**/coverage.info
    #     ./cc-test-reporter upload-coverage
    #   env:
    #     CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
    #     GIT_BRANCH: ${{ github.ref_name }}
    #     GIT_COMMIT: ${{ github.sha }}
        
    - name: Upload coverage reports to Codecov
      if: always()
      uses: codecov/codecov-action@v5
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        verbose: true
        files: ./coverage.cobertura.xml

    - name: ReportGenerator
      if: always()
      uses: danielpalme/ReportGenerator-GitHub-Action@5.4.5
      with:
        reports: coverage/**/coverage.cobertura.xml
        targetdir: 'coveragereport'
        toolpath: 'reportgeneratortool' # Default directory for installing the dotnet tool.
        reporttypes: 'HtmlInline;Cobertura'

    - name: Upload coverage report artifact
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: CoverageReport # Artifact name        
        path: coveragereport # Directory containing files to upload    
